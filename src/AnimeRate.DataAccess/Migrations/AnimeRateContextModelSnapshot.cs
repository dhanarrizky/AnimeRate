// <auto-generated />
using System;
using AnimeRate.DataAccess.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimeRate.DataAccess.Migrations
{
    [DbContext(typeof(AnimeRateContext))]
    partial class AnimeRateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimeRate.DataAccess.Models.Anime", b =>
                {
                    b.Property<int>("AnimeId")
                        .HasColumnType("int")
                        .HasColumnName("anime_id");

                    b.Property<short?>("Episodes")
                        .HasColumnType("smallint")
                        .HasColumnName("episodes");

                    b.Property<string>("Genre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("genre");

                    b.Property<int?>("Members")
                        .HasColumnType("int")
                        .HasColumnName("members");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<double?>("Rating")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.ToTable("anime", (string)null);
                });

            modelBuilder.Entity("AnimeRate.DataAccess.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("AnimeRate.DataAccess.Models.Rating", b =>
                {
                    b.Property<int>("AnimeId")
                        .HasColumnType("int")
                        .HasColumnName("anime_id");

                    b.Property<int>("Rating1")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.ToTable("rating", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
